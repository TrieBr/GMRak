<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>peer = gmrak_peer_create();
show_debug_message(peer);
gmrak_peer_startup_client(peer);
gmrak_peer_connect(peer,"127.0.0.1",1338); //Connect to localhost on port 1337

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var packet = gmrak_peer_receive(peer); //Receive any packets
if (packet&gt;=0) { //If a packet has been eceived
    var messageID = gmrak_packet_get_message_id(packet); //Read the message ID
    show_debug_message("Message Received on Client: "+string(messageID));
    switch (messageID) {
        case ID_CONNECTION_REQUEST_ACCEPTED:
            show_debug_message("Connected!"); //Connected to the server!
            break;
        case ID_USER_PACKET_ENUM: //Packet with ID ID_USER_PACKET_ENUM was received
            var bitstream = gmrak_bitstream_create_from_packet(packet,true,false); //Create a bitstream from the packet
            var u8 = gmrak_bitstream_read_u8(bitstream);
            show_debug_message("u8: "+string(u8)); //Print data
            var s8 = gmrak_bitstream_read_s8(bitstream);
           show_debug_message("s8: "+string(s8)); //Print data
            var u16 = gmrak_bitstream_read_u16(bitstream);
            show_debug_message("u16: "+string(u16)); //Print data
            var s16 = gmrak_bitstream_read_s16(bitstream);
            show_debug_message("s16: "+string(s16)); //Print data
            var u32 = gmrak_bitstream_read_u32(bitstream);
            show_debug_message("u32: "+string(u32)); //Print data
            var s32 = gmrak_bitstream_read_s32(bitstream);
            show_debug_message("s32: "+string(s32)); //Print data
            var f32 = gmrak_bitstream_read_f32(bitstream);
            show_debug_message("f32: "+string(f32)); //Print data
            var f64 = gmrak_bitstream_read_f64(bitstream);
            show_debug_message("f64: "+string(f64)); //Print data
            var bool = gmrak_bitstream_read_bool(bitstream);
            show_debug_message("bool: "+string(bool)); //Print data
            var msgid = gmrak_bitstream_read_message_id(bitstream);
            show_debug_message("message id: "+string(msgid)); //Print data
            var str = gmrak_bitstream_read_string(bitstream);
            show_debug_message("string: "+string(str)); //Print data
            gmrak_bitstream_destroy(bitstream); //Destroy the bitstream
            break;
    }
gmrak_peer_deallocate_packet(peer,packet); //Remember to deallocate packet once it has been processed ! 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
