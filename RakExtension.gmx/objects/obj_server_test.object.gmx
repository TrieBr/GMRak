<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gmrak_init();
peer = gmrak_peer_create();
gmrak_peer_startup_server(peer,20,1338); //Open server on port 1337
gmrak_peer_set_max_incoming_connections(peer,20); //Max 20 incoming connections at the same time

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var packet = gmrak_peer_receive(peer); //Receive any packets
if (packet&gt;=0) { //If a packet has been received
    var messageID = gmrak_packet_get_message_id(packet); //Read the message ID
    switch (messageID) {
        case ID_NEW_INCOMING_CONNECTION: //New client connected
            show_debug_message("New Client Connected!");
            var clientGUID = gmrak_packet_get_guid(packet); //Get the client GUID. We need this anytime we want to send a packet to this client!
            show_debug_message("Client GUID: "+string(clientGUID));
            //Lets send a packet to the new client
            var bitstream = gmrak_bitstream_create();
            gmrak_bitstream_write_message_id(bitstream,ID_USER_PACKET_ENUM);
            gmrak_bitstream_write_u8(bitstream, 123);
            gmrak_bitstream_write_s8(bitstream, -23);
            gmrak_bitstream_write_u16(bitstream, 837);
            gmrak_bitstream_write_s16(bitstream, -236);
            gmrak_bitstream_write_u32(bitstream, 24498823);
            gmrak_bitstream_write_s32(bitstream, -424112);
            gmrak_bitstream_write_f32(bitstream, 3.1333);
            gmrak_bitstream_write_f64(bitstream, 76.12);
           gmrak_bitstream_write_bool(bitstream, true);
            gmrak_bitstream_write_message_id(bitstream, 67);
           gmrak_bitstream_write_string(bitstream, "Test Message!");
            gmrak_peer_send(peer,bitstream,MEDIUM_PRIORITY,RELIABLE_ORDERED,0,clientGUID,false); //Send packet to the client
            gmrak_bitstream_destroy(bitstream);
            show_debug_message("Sent message to client..");
            break;
    }
gmrak_peer_deallocate_packet(peer,packet); //Remember to deallocate packet once it has been processed ! 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
